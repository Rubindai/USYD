package Tanks;

import org.checkerframework.checker.units.qual.A;
import processing.core.PApplet;
import processing.core.PImage;
import processing.data.JSONArray;
import processing.data.JSONObject;
import processing.event.KeyEvent;
import processing.event.MouseEvent;

import java.awt.*;
import java.awt.geom.AffineTransform;
import java.awt.image.BufferedImage;

import java.io.*;
import java.util.*;

public class App extends PApplet {

    public static final int CELLSIZE = 32; //8;
    public static final int CELLHEIGHT = 32;

    public static final int CELLAVG = 32;
    public static final int TOPBAR = 0;
    public static int WIDTH = 864; //CELLSIZE*BOARD_WIDTH;
    public static int HEIGHT = 640; //BOARD_HEIGHT*CELLSIZE+TOPBAR;
    public static final int BOARD_WIDTH = WIDTH/CELLSIZE;
    public static final int BOARD_HEIGHT = 20;

    public static final int INITIAL_PARACHUTES = 1;

    public static final int FPS = 30;

    public String configPath;

    public static Random random = new Random();
    private PImage img;
    private JSONArray json_array;
    private JSONObject json_obj;
    private String layout;
    private String background;
    private String foreground_colour;
    private String trees;
    private ArrayList<Float> list_of_points = new ArrayList<Float>();
    
	
	// Feel free to add any additional methods or attributes you want. Please put classes in different files.

    public App() {
        this.configPath = "config.json";
    }

    /**
     * Initialise the setting of the window size.
     */
	@Override
    public void settings() {
        size(WIDTH, HEIGHT);
    }

    /**
     * Load all resources such as images. Initialise the elements such as the player and map elements.
     */
	@Override
    public void setup() {
        frameRate(FPS);
        json_obj = loadJSONObject(configPath);
        
        json_array=json_obj.getJSONArray("levels");
        layout=json_array.getJSONObject(0).getString("layout");
        // System.out.println(layout);
        background=json_array.getJSONObject(0).getString("background");
        foreground_colour=json_array.getJSONObject(0).getString("foreground-colour");
        trees=json_array.getJSONObject(0).getString("trees");
        img=loadImage("src/main/resources/Tanks/"+background);
		//See PApplet javadoc:
		//loadJSONObject(configPath)
		//loadImage(this.getClass().getResource(filename).getPath().toLowerCase(Locale.ROOT).replace("%20", " "));
    }

    /**
     * Receive key pressed signal from the keyboard.
     */
	@Override
    public void keyPressed(KeyEvent event){
        
    }

    /**
     * Receive key released signal from the keyboard.
     */
	@Override
    public void keyReleased(){
        
    }

    @Override
    public void mousePressed(MouseEvent e) {
        //TODO - powerups, like repair and extra fuel and teleport


    }

    @Override
    public void mouseReleased(MouseEvent e) {

    }

    /**
     * Draw all elements in the game by current frame.
     */
	@Override
    public void draw() {
        image(img,0,0);
        File f_in;
        String f_input;
        Scanner scan=null;
        char char_of_f;
        float y_cord=0;
         //middle point x=432 y=320
      
        float x_yord=0;

        try{
            
            f_in=new File(layout);
            scan = new Scanner(f_in);
            
            
            

    
            }catch(FileNotFoundException e){
                System.out.println("ERROR ON FILE PARSING");
            }
            while(scan.hasNextLine()){
                f_input=scan.nextLine();
                int i=0;
                
                while(i<f_input.length()){  //The file contain spaces which is 28*20
                    char_of_f= f_input.charAt(i);
                    if(char_of_f=='X'){
                        // this.noStroke();
                        this.rect(i*32, y_cord*32, 32, 32); //instead of doing in seperate boxes, I can do it in one
                        //but that may cause a problem when calculating damage;
                        
                        
                        for(int j=(int)y_cord;j<20;j+=1){
                            this.rect(i*32, j*32, 32, 32);
                        }

                    }
                    i+=1;
                }
                y_cord+=1;
                
            }
            
            
        

        //----------------------------------
        //display HUD:
        //----------------------------------
        //TODO

        //----------------------------------
        //display scoreboard:
        //----------------------------------
        //TODO
        
		//----------------------------------
        //----------------------------------

        //TODO: Check user action
    }


    public static void main(String[] args) {
        PApplet.main("Tanks.App");
    }

}
