package Tanks;

import org.checkerframework.checker.units.qual.A;
import processing.core.PApplet;
import processing.core.PImage;
import processing.data.JSONArray;
import processing.data.JSONObject;
import processing.event.KeyEvent;
import processing.event.MouseEvent;

import java.awt.*;
import java.awt.geom.AffineTransform;
import java.awt.image.BufferedImage;

import java.io.*;
import java.util.*;

public class App extends PApplet {

    public static final int CELLSIZE = 32; //8;
    public static final int CELLHEIGHT = 32;

    public static final int CELLAVG = 32;
    public static final int TOPBAR = 0;
    public static int WIDTH = 864; //CELLSIZE*BOARD_WIDTH;
    public static int HEIGHT = 640; //BOARD_HEIGHT*CELLSIZE+TOPBAR;
    public static final int BOARD_WIDTH = WIDTH/CELLSIZE;
    public static final int BOARD_HEIGHT = 20;

    public static final int INITIAL_PARACHUTES = 1;

    public static final int FPS = 30;

    public String configPath;

    public static Random random = new Random();
    private PImage img;
    private JSONArray json_array;
    private JSONObject json_obj;
    private String layout;
    private String background;
    private String foreground_colour;
    private String trees;
    // private ArrayList<float[]> list_of_points = new ArrayList<float[]>();
    
	
	// Feel free to add any additional methods or attributes you want. Please put classes in different files.

    public App() {
        this.configPath = "config.json";
    }

    /**
     * Initialise the setting of the window size.
     */
	@Override
    public void settings() {
        size(WIDTH, HEIGHT);
    }

    /**
     * Load all resources such as images. Initialise the elements such as the player and map elements.
     */
	@Override
    public void setup() {
        frameRate(FPS);
        json_obj = loadJSONObject(configPath);
        
        json_array=json_obj.getJSONArray("levels");
        layout=json_array.getJSONObject(0).getString("layout");
        // System.out.println(layout);
        background=json_array.getJSONObject(0).getString("background");
        foreground_colour=json_array.getJSONObject(0).getString("foreground-colour");
        trees=json_array.getJSONObject(0).getString("trees");
        img=loadImage("src/main/resources/Tanks/"+background);
		//See PApplet javadoc:
		//loadJSONObject(configPath)
		//loadImage(this.getClass().getResource(filename).getPath().toLowerCase(Locale.ROOT).replace("%20", " "));
    }

    /**
     * Receive key pressed signal from the keyboard.
     */
	@Override
    public void keyPressed(KeyEvent event){
        
    }

    /**
     * Receive key released signal from the keyboard.
     */
	@Override
    public void keyReleased(){
        
    }

    @Override
    public void mousePressed(MouseEvent e) {
        //TODO - powerups, like repair and extra fuel and teleport


    }

    @Override
    public void mouseReleased(MouseEvent e) {

    }

    /**
     * Draw all elements in the game by current frame.
     */
    public ArrayList<float[]> moveavrage(ArrayList<float[]> list){
       
        for(int i=0;i<list.size()-33;i+=1){
            
            int pos=i;
            float x=0;
            float sumy=0;
            for(int j=0;j<32;j+=1){
                x=list.get(i)[0];
                sumy+=list.get(pos)[1];
                pos+=1;
            }
            float[] temp={x,sumy/32};
            list.set(i,temp);
        }
        // System.out.println(1);
        return list;
    }
    
    public ArrayList<float[]> sort_from_leftToRight(ArrayList<float[]> list){
        ArrayList<float[]> new_ArrayList=new ArrayList<float[]>();
        while(list.size()>0){
            float[] min_array=list.get(0);
            float min_num=min_array[0];

            for(int i=1;i<list.size();i++){
                float[] temp_array=list.get(i);
                float temp_num=temp_array[0];
                if(temp_num<min_num){
                    min_array=temp_array;
                    min_num=temp_num;
                }


            }
            new_ArrayList.add(min_array);
            list.remove(list.indexOf(min_array));

    }
    
    return new_ArrayList;
}
	@Override
    public void draw() {
        image(img,0,0);
        File f_in;
        String f_input;
        Scanner scan=null;
        char char_of_f;
        float y_cord=0;
        float x_cord=0;
        ArrayList<float[]> list_of_points = new ArrayList<float[]>();
        
         //middle point x=432 y=320
      
     

        try{
            
            f_in=new File(layout);
            scan = new Scanner(f_in);
            
            }catch(FileNotFoundException e){
                System.out.println("ERROR ON FILE PARSING");
            }
            while(scan.hasNextLine()){
                f_input=scan.nextLine();
                int i=0;
                
                while(i<f_input.length()){  //The file contain spaces which is 28*20
                    char_of_f= f_input.charAt(i);
                    if(char_of_f=='X'){
                        x_cord=i*32;
                       
                        for(int k=0;k<32;k++){
                            float[] cord=new float[2];
                            cord[0]=x_cord;
                            cord[1]=y_cord*32;
                            list_of_points.add(cord);
                            x_cord+=1;
                        }
                    }
                    i+=1;
                }
                y_cord+=1;
                
            }
            list_of_points=sort_from_leftToRight(list_of_points);
            list_of_points=moveavrage(list_of_points);
            // list_of_points=moveavrage(list_of_points);
        //    ArrayList<float[]> a1=new ArrayList<float[]>();
        //    for(int t=0;t<150;t++){
        //     a1.add(list_of_points.get(t));
        //    }
            for(float[] temp_cord:list_of_points){
                    this.noStroke();
                    this.rect(temp_cord[0],temp_cord[1],1,630);
            }

            
            
            
        

        //----------------------------------
        //display HUD:
        //----------------------------------
        //TODO

        //----------------------------------
        //display scoreboard:
        //----------------------------------
        //TODO
        
		//----------------------------------
        //----------------------------------

        //TODO: Check user action
    }


    public static void main(String[] args) {
        PApplet.main("Tanks.App");
    }

}
